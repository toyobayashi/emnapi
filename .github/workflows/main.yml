name: Build

on:
  push:
    paths:
    - .github/workflows/**
    - '**.ts'
    - '**.js'
    - '**.c'
    - '**.cc'
    - '**.cpp'
    - '**.h'
    - '!packages/bench/**'
    - '!script/**'
    - '!example/**'
    branches:
    - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
        - 'wasm32-unknown-emscripten'
        - 'wasm64-unknown-emscripten'
        - 'wasm32-unknown-unknown'
        - 'wasm32-wasi'
        - 'wasm32-wasi-threads'

    steps:
    - uses: actions/checkout@v3
    - name: Install Ninja
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build
    - uses: mymindstorm/setup-emsdk@v12
      if: ${{ contains(matrix.target, 'emscripten') }}
      with:
        version: '3.1.34'
        # no-cache: true
        actions-cache-folder: 'emsdk-cache'
    - uses: actions-rs/toolchain@v1
      if: ${{ matrix.target == 'wasm32-unknown-unknown' || matrix.target == 'wasm32-wasi' }}
      with:
        toolchain: nightly
        default: true
        target: ${{ matrix.target }}

    - name: Install wasi-sdk
      if: ${{ matrix.target == 'wasm32-unknown-unknown' || matrix.target == 'wasm32-wasi' || matrix.target == 'wasm32-wasi-threads' }}
      env:
        WASI_VERSION: '20'
        WASI_VERSION_FULL: '20.0'
        WASI_SDK_PATH: './wasi-sdk-20.0'
      shell: bash
      run: |
        wget -q https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz
        mkdir -p $WASI_SDK_PATH
        tar zxvf wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz -C $WASI_SDK_PATH --strip 1

    - uses: actions/setup-node@v3
      with:
        node-version: ${{ (contains(matrix.target, 'emscripten') && '20.0.0-v8-canary202302081604228b65') || '18.12.1' }}
        registry-url: 'https://registry.npmjs.org'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: NPM Install
      shell: bash
      run: |
        npm install -g node-gyp
        npm install

    - name: NPM Build
      shell: bash
      run: npm run build --workspaces --if-present

    # - name: Lint
    #   run: npm run lint

    - name: Test wasm32-wasi-threads
      if: ${{ matrix.target == 'wasm32-wasi-threads' }}
      env:
        WASI_VERSION: '20'
        WASI_VERSION_FULL: '20.0'
        WASI_SDK_PATH: './wasi-sdk-20.0'
      run: |
        npm run rebuild:wt -w packages/test
        npm run test:wt -w packages/test

    - name: Test wasm32-unknown-emscripten
      if: ${{ matrix.target == 'wasm32-unknown-emscripten' }}
      run: |
        npm run rebuild -w packages/test
        npm run test -w packages/test

    - name: Test wasm64-unknown-emscripten
      if: ${{ matrix.target == 'wasm64-unknown-emscripten' }}
      env:
        MEMORY64: '1'
      run: |
        npm run rebuild -w packages/test
        npm run test -w packages/test

    - name: Test wasm32-wasi
      if: ${{ matrix.target == 'wasm32-wasi' }}
      env:
        WASI_VERSION: '20'
        WASI_VERSION_FULL: '20.0'
        WASI_SDK_PATH: './wasi-sdk-20.0'
      run: |
        npm run rebuild:w -w packages/test
        cd ./packages/test/rust && cargo build --release --target=wasm32-wasi && cd ../../..
        npm run test:w -w packages/test

    - name: Test wasm32-unknown-unknown
      if: ${{ matrix.target == 'wasm32-unknown-unknown' }}
      env:
        WASI_VERSION: '20'
        WASI_VERSION_FULL: '20.0'
        WASI_SDK_PATH: './wasi-sdk-20.0'
      run: |
        npm run rebuild:wasm32 -w packages/test
        cd ./packages/test/rust && cargo build --release --target=wasm32-unknown-unknown && cd ../../..
        npm run test:wasm32 -w packages/test

  release:
    name: Release
    if: ${{ startsWith(github.event.ref, 'refs/tags') }}
    needs: build
    runs-on: ubuntu-latest
    env:
      WASI_VERSION: '20'
      WASI_VERSION_FULL: '20.0'
      WASI_SDK_PATH: './wasi-sdk-20.0'

    steps:
    - uses: actions/checkout@v3
    - name: Install Ninja
      run: |
        sudo apt-get update
        sudo apt-get install ninja-build
    - uses: mymindstorm/setup-emsdk@v12
      with:
        version: '3.1.34'
        # no-cache: true
        actions-cache-folder: 'emsdk-cache'
    - name: Install wasi-sdk
      shell: bash
      run: |
        wget -q https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${WASI_VERSION}/wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz
        mkdir -p $WASI_SDK_PATH
        tar zxvf wasi-sdk-${WASI_VERSION_FULL}-linux.tar.gz -C $WASI_SDK_PATH --strip 1
    - uses: actions/setup-node@v3
      with:
        node-version: '18.12.1'
        registry-url: 'https://registry.npmjs.org'
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: NPM Install
      shell: bash
      run: |
        npm install -g node-gyp
        npm install

    - name: NPM Build
      shell: bash
      run: npm run build --workspaces --if-present

    - name: Publish
      run: |
        node ./script/release.js
        npm publish --ignore-scripts -w packages/runtime -w packages/node -w packages/emnapi -w packages/core

    - name: Create release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.after }}
        name: ${{ github.event.after }}
        draft: true
        prerelease: false
        generate_release_notes: true
        files: ./script/emnapi.zip
